pci id for fd 16: 80ee:beef, driver (null)
App load time: 2060ms
OpenGL Warning: glFlushVertexArrayRangeNV not found in mesa table
OpenGL Warning: glVertexArrayRangeNV not found in mesa table
OpenGL Warning: glCombinerInputNV not found in mesa table
OpenGL Warning: glCombinerOutputNV not found in mesa table
OpenGL Warning: glCombinerParameterfNV not found in mesa table
OpenGL Warning: glCombinerParameterfvNV not found in mesa table
OpenGL Warning: glCombinerParameteriNV not found in mesa table
OpenGL Warning: glCombinerParameterivNV not found in mesa table
OpenGL Warning: glFinalCombinerInputNV not found in mesa table
OpenGL Warning: glGetCombinerInputParameterfvNV not found in mesa table
OpenGL Warning: glGetCombinerInputParameterivNV not found in mesa table
OpenGL Warning: glGetCombinerOutputParameterfvNV not found in mesa table
OpenGL Warning: glGetCombinerOutputParameterivNV not found in mesa table
OpenGL Warning: glGetFinalCombinerInputParameterfvNV not found in mesa table
OpenGL Warning: glGetFinalCombinerInputParameterivNV not found in mesa table
OpenGL Warning: glDeleteFencesNV not found in mesa table
OpenGL Warning: glFinishFenceNV not found in mesa table
OpenGL Warning: glGenFencesNV not found in mesa table
OpenGL Warning: glGetFenceivNV not found in mesa table
OpenGL Warning: glIsFenceNV not found in mesa table
OpenGL Warning: glSetFenceNV not found in mesa table
OpenGL Warning: glTestFenceNV not found in mesa table
libGL error: core dri or dri2 extension not found
libGL error: failed to load driver: vboxvideo
[29725:1117/215031:ERROR:buffer_manager.cc(342)] [GroupMarkerNotSet(crbug.com/242999)!:D00E7912AB3F0000]GL ERROR :GL_INVALID_ENUM : glBufferData: <- error from previous GL command
[29725:1117/215032:ERROR:texture_manager.cc(1995)] [GroupMarkerNotSet(crbug.com/242999)!:D00E7912AB3F0000]GL ERROR :GL_INVALID_ENUM : glTexImage2D: <- error from previous GL command
pci id for fd 16: 80ee:beef, driver (null)
OpenGL Warning: glFlushVertexArrayRangeNV not found in mesa table
OpenGL Warning: glVertexArrayRangeNV not found in mesa table
OpenGL Warning: glCombinerInputNV not found in mesa table
OpenGL Warning: glCombinerOutputNV not found in mesa table
OpenGL Warning: glCombinerParameterfNV not found in mesa table
OpenGL Warning: glCombinerParameterfvNV not found in mesa table
OpenGL Warning: glCombinerParameteriNV not found in mesa table
OpenGL Warning: glCombinerParameterivNV not found in mesa table
OpenGL Warning: glFinalCombinerInputNV not found in mesa table
OpenGL Warning: glGetCombinerInputParameterfvNV not found in mesa table
OpenGL Warning: glGetCombinerInputParameterivNV not found in mesa table
OpenGL Warning: glGetCombinerOutputParameterfvNV not found in mesa table
OpenGL Warning: glGetCombinerOutputParameterivNV not found in mesa table
OpenGL Warning: glGetFinalCombinerInputParameterfvNV not found in mesa table
OpenGL Warning: glGetFinalCombinerInputParameterivNV not found in mesa table
OpenGL Warning: glDeleteFencesNV not found in mesa table
OpenGL Warning: glFinishFenceNV not found in mesa table
OpenGL Warning: glGenFencesNV not found in mesa table
OpenGL Warning: glGetFenceivNV not found in mesa table
OpenGL Warning: glIsFenceNV not found in mesa table
OpenGL Warning: glSetFenceNV not found in mesa table
OpenGL Warning: glTestFenceNV not found in mesa table
libGL error: core dri or dri2 extension not found
libGL error: failed to load driver: vboxvideo
[29830:1117/215034:ERROR:texture_manager.cc(1995)] [GroupMarkerNotSet(crbug.com/242999)!:D00E4706BA0C0000]GL ERROR :GL_INVALID_ENUM : glTexImage2D: <- error from previous GL command
[29830:1117/215034:ERROR:gles2_cmd_decoder.cc(2082)] [GroupMarkerNotSet(crbug.com/242999)!:D00E4706BA0C0000]GL ERROR :GL_INVALID_ENUM : GLES2DecoderImpl::DoReleaseTexImage2DCHROMIUM: <- error from previous GL command
pci id for fd 16: 80ee:beef, driver (null)
OpenGL Warning: glFlushVertexArrayRangeNV not found in mesa table
OpenGL Warning: glVertexArrayRangeNV not found in mesa table
OpenGL Warning: glCombinerInputNV not found in mesa table
OpenGL Warning: glCombinerOutputNV not found in mesa table
OpenGL Warning: glCombinerParameterfNV not found in mesa table
OpenGL Warning: glCombinerParameterfvNV not found in mesa table
OpenGL Warning: glCombinerParameteriNV not found in mesa table
OpenGL Warning: glCombinerParameterivNV not found in mesa table
OpenGL Warning: glFinalCombinerInputNV not found in mesa table
OpenGL Warning: glGetCombinerInputParameterfvNV not found in mesa table
OpenGL Warning: glGetCombinerInputParameterivNV not found in mesa table
OpenGL Warning: glGetCombinerOutputParameterfvNV not found in mesa table
OpenGL Warning: glGetCombinerOutputParameterivNV not found in mesa table
OpenGL Warning: glGetFinalCombinerInputParameterfvNV not found in mesa table
OpenGL Warning: glGetFinalCombinerInputParameterivNV not found in mesa table
OpenGL Warning: glDeleteFencesNV not found in mesa table
OpenGL Warning: glFinishFenceNV not found in mesa table
OpenGL Warning: glGenFencesNV not found in mesa table
OpenGL Warning: glGetFenceivNV not found in mesa table
OpenGL Warning: glIsFenceNV not found in mesa table
OpenGL Warning: glSetFenceNV not found in mesa table
OpenGL Warning: glTestFenceNV not found in mesa table
libGL error: core dri or dri2 extension not found
libGL error: failed to load driver: vboxvideo
[29847:1117/215034:ERROR:texture_manager.cc(1995)] [GroupMarkerNotSet(crbug.com/242999)!:D0DE432ED4310000]GL ERROR :GL_INVALID_ENUM : glTexImage2D: <- error from previous GL command
[29847:1117/215034:ERROR:texture_manager.cc(1995)] [GroupMarkerNotSet(crbug.com/242999)!:D0E4432ED4310000]GL ERROR :GL_INVALID_ENUM : glTexImage2D: <- error from previous GL command

** (udisksctl mount:1517): ERROR **: Got unexpected EOF while reading from controlling terminal.
/tmp/spacefm-cm-6f0aba5b.tmp/170b144b-tmp.sh: line 16:  1517 Trace/breakpoint trap   /usr/bin/udisksctl mount -b /dev/sr0 -o 'noexec,nosuid,noatime'
polkit-agent-helper-1: pam_authenticate failed: Authentication failure

Selected Device Handler 'udevil iso unmount': MOUNT [iso9660]

Automount: /usr/bin/udisksctl mount -b /dev/sr0 -o 'noexec,nosuid,noatime'

TASK_COMMAND(0x10d5000)=/usr/bin/udisksctl mount -b /dev/sr0 -o 'noexec,nosuid,noatime'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/170b144b-tmp.sh  run
    pid = 1515

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/641380fd-tmp.sh  run
    pid = 1526
async child finished  pid=1515

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/13b72c25-tmp.sh  run
    pid = 1530
child finished  pid=1526 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/53f8ac80-tmp.sh  run
    pid = 1622
async child finished  pid=1530

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/0c73639d-tmp.sh  run
    pid = 1625
child finished  pid=1622 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/2093c26c-tmp.sh  run
    pid = 1727
async child finished  pid=1625

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/5e077001-tmp.sh  run
    pid = 1730
child finished  pid=1727 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/62826296-tmp.sh  run
    pid = 1821
async child finished  pid=1730

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/3a379fdb-tmp.sh  run
    pid = 1824
child finished  pid=1821 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/3c1d3152-tmp.sh  run
    pid = 1924
async child finished  pid=1824

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/7ced824b-tmp.sh  run
    pid = 1928
child finished  pid=1924 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/7df72df1-tmp.sh  run
    pid = 2088
async child finished  pid=1928

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/43ca47bf-tmp.sh  run
    pid = 2091
child finished  pid=2088 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/3c34bb6a-tmp.sh  run
    pid = 2185
async child finished  pid=2091

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/7868caa9-tmp.sh  run
    pid = 2188
child finished  pid=2185 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/5c4ecd11-tmp.sh  run
    pid = 2273
async child finished  pid=2188

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/7f1539d2-tmp.sh  run
    pid = 2276
child finished  pid=2273 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/2f43691d-tmp.sh  run
    pid = 2361
async child finished  pid=2276

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/0efe72a3-tmp.sh  run
    pid = 2364
child finished  pid=2361 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/68ee2584-tmp.sh  run
    pid = 2463
async child finished  pid=2364

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/32ad5c32-tmp.sh  run
    pid = 2466
child finished  pid=2463 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/3f2da2df-tmp.sh  run
    pid = 2584
async child finished  pid=2466

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/71e08603-tmp.sh  run
    pid = 2587
child finished  pid=2584 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/09b59d58-tmp.sh  run
    pid = 2699
async child finished  pid=2587

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/2d31ceda-tmp.sh  run
    pid = 2702
child finished  pid=2699 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/2db05da4-tmp.sh  run
    pid = 2818
async child finished  pid=2702

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/033b63ae-tmp.sh  run
    pid = 2821
child finished  pid=2818 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/762adb55-tmp.sh  run
    pid = 2907
async child finished  pid=2821

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/7ea628e0-tmp.sh  run
    pid = 2921
child finished  pid=2907 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/05f3c3bf-tmp.sh  run
    pid = 3031
async child finished  pid=2921

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/4400c0d1-tmp.sh  run
    pid = 3034
child finished  pid=3031 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/22700c55-tmp.sh  run
    pid = 3119
async child finished  pid=3034

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/6a0744bc-tmp.sh  run
    pid = 3122
child finished  pid=3119 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/57b7ecf6-tmp.sh  run
    pid = 3209
async child finished  pid=3122

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/7668b8d5-tmp.sh  run
    pid = 3216
child finished  pid=3209 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/767aa85a-tmp.sh  run
    pid = 3304
async child finished  pid=3216

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/784baf63-tmp.sh  run
    pid = 3307
child finished  pid=3304 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d5000)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/547028d7-tmp.sh  run
    pid = 3392
async child finished  pid=3307

TASK_COMMAND(0x10d53f0)=/usr/bin/xdg-open 'https://atom.io/packages/tabs'
SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/58fd0af0-tmp.sh  run
    pid = 3395
child finished  pid=3392 exit_status=0

Selected Protocol Handler 'http & webdav': MOUNT http [https] webdav davfs mtab_fs=davfs*

TASK_COMMAND(0x10d52a0)=fm_url_proto='https'; fm_url='https://atom.io/packages/tabs'; fm_url_host='atom.io'; fm_url_port=''; fm_url_user=''; fm_url_pass=''; fm_url_path='/packages/tabs'; fm_mtab_fs=''; fm_mtab_url=''
# This handler opens http:// and webdav://

# Set your web browser in Help|Options|Browser

# set missing_davfs=1 if you always want to open http in web browser
# set missing_davfs=0 if you always want to mount http with davfs
missing_davfs=

if [ -z "$missing_davfs" ]; then
    grep -s '^allowed_types *=.*davfs' /etc/udevil/udevil.conf 2>/dev/null
    missing_davfs=$?  
fi
if [ "$fm_url_proto" = "webdav" ] || [ "$fm_url_proto" = "davfs" ] || \
            [ $missing_davfs -eq 0 ]; then
    fm_url="${fm_url/webdav:\/\//http://}"
    fm_url="${fm_url/davfs:\/\//http://}"
    # attempt davfs mount in terminal
    spacefm -s run-task cmd --terminal \
        "udevil mount '$fm_url' || ( echo; echo 'Press Enter to close:'; read )"
    exit
fi
# open in web browser
spacefm -s run-task web "$fm_url"


SPAWN=/bin/bash  /tmp/spacefm-cm-6f0aba5b.tmp/32834f3e-tmp.sh  run
    pid = 3480
async child finished  pid=3395
